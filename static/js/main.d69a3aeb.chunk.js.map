{"version":3,"sources":["actions/index.ts","constants/common.ts","actions/updateRates.ts","actions/alerts/removeAlert.ts","actions/alerts/addAlert.ts","types.ts","utils/formatMoney.ts","components/CurrencyInput/CurrencyInput.style.ts","utils/noop.ts","components/CurrencyInput/CurrencyInput.tsx","constants/colors.ts","components/ExchangeWidget/WidgetBlock/WidgetBlock.style.ts","components/Slider/Slider.tsx","components/ExchangeWidget/WidgetBlock/WidgetBlock.tsx","components/ExchangeWidget/ExchangeWidget.style.ts","components/ExchangeWidget/SubmitButton/SubmitButton.style.ts","components/ExchangeWidget/SubmitButton/SubmitButton.tsx","utils/path.ts","components/ExchangeWidget/ExchangeWidget.tsx","components/ExchangeWidget/formStateHOC/formStateHOC.tsx","components/ExchangeWidget/formStateHOC/utils.ts","components/ExchangeWidget/ExchangeWidgetContainer.tsx","actions/exchange.ts","store/reducers/rates.ts","store/reducers/pockets.ts","store/reducers/alerts.ts","store/reducers/index.ts","store/index.ts","components/AlertsStack/AlertsStack.tsx","components/AlertsStack/AlertsStackContainer.ts","components/App/App.tsx","index.tsx"],"names":["ActionType","EXCHANGE_API","DEFAULT_CURRENCY_ORDER","ALERT_ID","errorFlag","updateRates","sourceCurrency","dispatch","type","RATES_REQUEST","payload","baseCurrency","fetch","concat","then","response","json","_ref","_ref$rates","rates","RUB","EUR","USD","GBP","id","ALERT_REMOVE","RATES_REQUEST_SUCCESS","catch","RATES_REQUEST_FAILURE","message","_ref$repeatable","repeatable","ALERT_ADD","addAlert","FieldType","symbols","optionsMap","as-is","maximumFractionDigits","always","minimumFractionDigits","none","formatMoney","val","currency","_ref$fractions","arguments","length","undefined","fractions","toLocaleString","generateClassName","css","_templateObject","noop","CurrencyInput","handleChange","value","_this$props","_this","props","name","prefix","newVal","slice","onChange","_this2","this","_this$props2","getRef","react_default","a","createElement","core_browser_esm","_ref2","number_format_default","getInputRef","className","decimalScale","allowNegative","maxLength","autoComplete","thousandSeparator","onValueChange","PureComponent","defaultProps","colors","Row","styled","div","WidgetBlock_style_templateObject","ExchangeBlock","_templateObject2","Wrapper","Source","SecondaryText","_templateObject3","Slide","Slider_templateObject","Slider","slider","scrollBlock","refSlider","el","refScrollBlock","querySelector","i","scrollLeft","onSlide","prevProps","currentSlide","slickGoTo","children","speed","ref","lib_default","dots","arrows","initialSlide","infinite","afterChange","React","Children","map","child","WigdetBlock","inputRefs","handleSlideClick","event","focusInput","currentTarget","dataset","handleSlide","index","newCurrency","onCurrencyChange","setInputRef","memoize","primitive","renderSlide","pockets","inputValue","onAmountChange","valueFieldName","extraContent","key","data-currency","onClick","components_CurrencyInput_CurrencyInput","focus","_this$props3","components_Slider_Slider","indexOf","Content","ExchangeWidget_style_templateObject","ErrorString","ExchangeWidget_style_templateObject2","Button","button","SubmitButton_style_templateObject","success","CheckIcon","svg","SubmitButton_style_templateObject2","_ref3","_ref4","Text","span","SubmitButton_style_templateObject3","_ref5","_ref6","_ref7","ExchnageButton","state","timer","handleClick","e","clearTimeout","setState","window","setTimeout","disabled","viewBox","d","path","obj","paths","idx","ExchangeWidget","targetCurrency","sourceAmount","targetAmount","onSubmit","valid","errorMsg","rate","WidgetBlock","Target","SubmitButton","getOppositeFieldName","defaultState","formStateHOC","initialState","WrappedComponent","FormStateHOC","_Component","_getPrototypeOf2","Object","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","updateTimer","handleCurrencyChange","oppositeName","prevCurrency","defineProperty","oppositeCurrency","curIndex","currencyOrder","shift","getNextCurrency","handleAmountChange","_this$setState3","calcAmount","handleSubmit","_this$state","onExchange","validate","max","inherits","createClass","setInterval","clearInterval","lastUpdatedField","fieldName","_this$state2","oppositeVal","realRate","Math","round","_this$state3","assign","Component","displayName","connect","POCKETS_EXCHANGE","exchange","initState","action","_action$payload","objectSpread","_objectSpread2","filterAlert","alert","keys","reduce","memo","alerts","_inc","newState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Container","AlertsStack_templateObject","ErrorMsg","AlertsStack_templateObject2","AlertsStack","values","App_templateObject","App_templateObject2","App","es","App_Container","App_Content","AlertsStackContainer","ExchangeWidgetContainer","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d69a3aeb.chunk.js","sourcesContent":["export enum ActionType {\n  RATES_REQUEST = 'RATES_REQUEST',\n  RATES_REQUEST_SUCCESS = 'RATES_REQUEST_SUCCESS',\n  RATES_REQUEST_FAILURE = 'RATES_REQUEST_FAILURE',\n\n  SOURCE_CURRENCY_CHANGE = 'SOURCE_CURRENCY_CHANGE',\n  TARGET_CURRENCY_CHANGE = 'TARGET_CURRENCY_CHANGE',\n\n  POCKETS_EXCHANGE = 'POCKETS_EXCHANGE',\n\n  ALERT_ADD = 'ALERT_ADD',\n  ALERT_REMOVE = 'ALERT_REMOVE'\n}\n","import { TCurrency } from '../types';\n\nexport const EXCHANGE_API = 'https://api.ratesapi.io/api';\nexport const DEFAULT_CURRENCY_ORDER: Array<TCurrency> = [\n  'RUB',\n  'USD',\n  'EUR',\n  'GBP'\n];\n","import { Dispatch } from 'redux';\nimport { EXCHANGE_API } from '../constants/common';\nimport { ActionType } from './index';\nimport addAlert from './alerts/addAlert';\nimport removeAlert from './alerts/removeAlert';\nimport { TCurrency } from '../types';\n\nconst ALERT_ID = 'UPDATE_RATES_FAILED';\n\nlet errorFlag = false;\n\nexport default function updateRates(sourceCurrency: TCurrency) {\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: ActionType.RATES_REQUEST,\n      payload: { baseCurrency: sourceCurrency }\n    });\n\n    return fetch(`${EXCHANGE_API}/latest?base=${sourceCurrency}`)\n      .then(response => response.json())\n      .then(({ rates = {} }) => {\n        const { RUB, EUR, USD, GBP } = rates;\n\n        return { RUB, EUR, USD, GBP };\n      })\n      .then(rates => {\n        if (errorFlag) {\n          dispatch(removeAlert(ALERT_ID));\n          errorFlag = false;\n        }\n\n        return dispatch({\n          type: ActionType.RATES_REQUEST_SUCCESS,\n          payload: { rates, baseCurrency: sourceCurrency }\n        });\n      })\n      .catch(() => {\n        errorFlag = true;\n\n        dispatch({\n          type: ActionType.RATES_REQUEST_FAILURE,\n          payload: { baseCurrency: sourceCurrency }\n        });\n\n        dispatch(\n          addAlert({\n            id: ALERT_ID,\n            message: 'Failed to get exchange rates',\n            repeatable: false\n          })\n        );\n      });\n  };\n}\n","import { ActionType } from '../index';\nimport { IAction } from '../../types';\n\nexport default function addAlert(id: string): IAction {\n  return {\n    type: ActionType.ALERT_REMOVE,\n    payload: { id }\n  };\n}\n","import { ActionType } from '../index';\nimport { IAction, IAlert } from '../../types';\n\nexport default function addAlert({\n  id,\n  message,\n  repeatable = true\n}: IAlert): IAction {\n  return {\n    type: ActionType.ALERT_ADD,\n    payload: { id, message, repeatable }\n  };\n}\n","import React from 'react';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { IStoreState } from './store';\nimport { ActionType } from './actions';\n\nexport type TCurrency = 'RUB' | 'USD' | 'EUR' | 'GBP';\n\nexport type TDispatch = ThunkDispatch<IStoreState, undefined, IAction>;\n\nexport interface IAction {\n  type: ActionType;\n  payload: {\n    [key: string]: any;\n  };\n}\n\nexport interface IFieldCallback {\n  (\n    e: React.SyntheticEvent<HTMLElement> | null,\n    obj: {\n      value: string;\n      name?: string;\n    }\n  ): void;\n}\n\nexport enum FieldType {\n  Source,\n  Target\n}\n\nexport interface IAlert {\n  id: string;\n  message: string;\n  repeatable?: boolean;\n}\n\nexport type TAnyObject = {\n  [id in string | number]?: any;\n};\n","import { TCurrency } from '../types';\n\nconst symbols = {\n  RUB: '₽',\n  USD: '$',\n  EUR: '€',\n  GBP: '£'\n};\n\nconst optionsMap = {\n  'as-is': {\n    maximumFractionDigits: 2\n  },\n  always: {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  },\n  none: {\n    maximumFractionDigits: 0\n  }\n};\n\nconst formatMoney = (\n  val: number,\n  currency: TCurrency,\n  { fractions = 'as-is' }: { fractions?: 'as-is' | 'always' | 'none' } = {}\n): string =>\n  symbols[currency] + val.toLocaleString(undefined, optionsMap[fractions]);\n\nexport default formatMoney;\n","export const generateClassName = (css: Function) =>\n  css`\n    background: none;\n    border: none;\n    color: inherit;\n    font-size: inherit;\n    text-align: right;\n    outline: none;\n    min-width: 50px;\n    padding: 0;\n    margin: 0;\n\n    ::-ms-clear {\n      display: none;\n    }\n  `;\n","export default () => {};\n","import React, { PureComponent } from 'react';\nimport { IFieldCallback } from '../../types';\nimport NumberFormat from 'react-number-format';\nimport { ClassNames } from '@emotion/core';\nimport { generateClassName } from './CurrencyInput.style';\nimport noop from '../../utils/noop';\n\ninterface IInputProps {\n  prefix?: '+' | '-';\n  name?: string;\n  value?: number | null;\n  onChange: IFieldCallback;\n  getRef: React.Ref<HTMLElement>;\n}\n\nclass CurrencyInput extends PureComponent<IInputProps> {\n  static defaultProps = {\n    onChange: noop,\n    getRef: noop\n  };\n\n  handleChange = ({ value }: { value: string }) => {\n    const { name, prefix } = this.props;\n\n    const newVal = prefix === '-' ? value.slice(prefix.length) : value;\n    const intPropsValue = this.props.value ? +this.props.value : 0;\n\n    if (+newVal !== intPropsValue) {\n      this.props.onChange(null, { value: newVal, name });\n    }\n  };\n\n  render() {\n    const { prefix, name, value, getRef } = this.props;\n\n    return (\n      <ClassNames>\n        {({ css }) => (\n          <NumberFormat\n            getInputRef={getRef}\n            className={generateClassName(css)}\n            decimalScale={2}\n            allowNegative={false}\n            maxLength={14}\n            name={name}\n            autoComplete={'off'}\n            thousandSeparator={true}\n            prefix={prefix}\n            value={value || ''}\n            onValueChange={this.handleChange}\n          />\n        )}\n      </ClassNames>\n    );\n  }\n}\n\nexport default CurrencyInput;\n","export default {\n  shadow: 'rgba(0, 0, 0, 0.25)',\n  blue1: '#3f90ea',\n  blue2: '#337dce',\n  pink1: '#eb008d',\n  pink2: '#d2007e',\n  pink3: '#CA0076',\n  red1: '#cd0a2c'\n};\n","import styled from '@emotion/styled';\nimport colors from '../../../constants/colors';\nimport { FieldType } from '../../../types';\n\nexport const Row = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ExchangeBlock = styled.div`\n  box-sizing: border-box;\n  padding: 40px 50px 46px;\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 26px;\n  color: white;\n`;\n\nexport const Wrapper = styled.div<{ type: FieldType }>(props =>\n  props.type === FieldType.Source\n    ? `\n        background-color: ${colors.blue1};\n        position: relative;\n        \n        &:after {\n          content: '';\n          display: block;\n          position: absolute;\n          left: 50%;\n          top: 100%;\n          transform: translate(-50%, -50%) rotate(45deg);\n          width: 20px;\n          height: 20px;\n          background-color: inherit;\n        }\n        `\n    : `\n          background-color: ${colors.blue2};\n        `\n);\n\nexport const SecondaryText = styled.div`\n  margin-top: 10px;\n  font-size: 12px;\n  color: white;\n  opacity: 0.7;\n`;\n","import React, { PureComponent } from 'react';\nimport SlickSlider from 'react-slick';\nimport styled from '@emotion/styled';\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './slick-theme.css';\nimport noop from '../../utils/noop';\n\nexport const Slide = styled.div`\n  outline: none !important;\n`;\n\ninterface ISliderProps {\n  onSlide: (index: number) => void;\n  currentSlide: number;\n  speed: number;\n}\n\nclass Slider extends PureComponent<ISliderProps> {\n  static defaultProps = {\n    onSlide: noop,\n    currentSlide: 0,\n    speed: 250\n  };\n\n  private slider?: SlickSlider;\n  private scrollBlock?: Element | null;\n\n  componentDidUpdate(prevProps: ISliderProps) {\n    const { currentSlide } = this.props;\n\n    // slider API is too tricky, there is no other possibility to change slide\n    if (this.props.currentSlide !== prevProps.currentSlide) {\n      this.slider && this.slider.slickGoTo(currentSlide);\n    }\n  }\n\n  refSlider = (el: SlickSlider) => {\n    this.slider = el;\n  };\n\n  refScrollBlock = (el: Element | null) => {\n    if (el) {\n      this.scrollBlock = el.querySelector('.slick-list');\n    }\n  };\n\n  handleChange = (i: number): void => {\n    if (this.scrollBlock) {\n      // fix the bug with shifted scroll position by reason of focusing on the input\n      this.scrollBlock.scrollLeft = 0;\n    }\n\n    this.props.onSlide(i);\n  };\n\n  render() {\n    const { currentSlide, children, speed } = this.props;\n\n    return (\n      <div ref={this.refScrollBlock}>\n        <SlickSlider\n          ref={this.refSlider}\n          dots\n          arrows\n          speed={speed}\n          initialSlide={currentSlide}\n          infinite={false}\n          afterChange={this.handleChange}\n        >\n          {React.Children.map(children, (child: React.ReactNode) => (\n            <Slide>{child}</Slide>\n          ))}\n        </SlickSlider>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","import React, { PureComponent } from 'react';\nimport { TCurrency, IFieldCallback, FieldType } from '../../../types';\nimport formatMoney from '../../../utils/formatMoney';\nimport CurrencyInput from '../../CurrencyInput/CurrencyInput';\nimport {\n  ExchangeBlock,\n  Row,\n  SecondaryText,\n  Wrapper\n} from './WidgetBlock.style';\nimport Slider from '../../Slider/Slider';\nimport memoize from 'memoizee';\n\nimport { DEFAULT_CURRENCY_ORDER } from '../../../constants/common';\nimport noop from '../../../utils/noop';\nimport { TPockets } from '../../../store/reducers/pockets';\n\ninterface IBlockProps {\n  type: FieldType;\n  currency: TCurrency;\n  pockets: TPockets;\n  inputValue?: number | null;\n  onCurrencyChange: (type: FieldType, value: TCurrency) => void;\n  onAmountChange?: IFieldCallback;\n  valueFieldName: string;\n  extraContent?: React.ReactNode;\n}\n\nclass WigdetBlock extends PureComponent<IBlockProps> {\n  static defaultProps = {\n    onCurrencyChange: noop\n  };\n\n  private inputRefs: { [key in TCurrency]?: HTMLElement } = {};\n\n  componentDidMount() {\n    const { type, currency } = this.props;\n\n    // focusing on first input after widget initialization\n    if (type === FieldType.Source) {\n      this.focusInput(currency);\n    }\n  }\n\n  handleSlideClick = (event: React.SyntheticEvent<HTMLElement>): void => {\n    this.focusInput(event.currentTarget.dataset['currency'] as TCurrency);\n  };\n\n  handleSlide = (index: number): void => {\n    const { type } = this.props;\n\n    const newCurrency = DEFAULT_CURRENCY_ORDER[index];\n\n    this.props.onCurrencyChange(type, newCurrency);\n\n    // if values are equal this mean, that currency was switched automatically because of changing opposite value\n    if (newCurrency !== this.props.currency) {\n      this.focusInput(newCurrency);\n    }\n  };\n\n  focusInput(currency: TCurrency): void {\n    const ref = this.inputRefs[currency];\n\n    ref && ref.focus();\n  }\n\n  setInputRef = memoize(\n    (currency: TCurrency) => (ref: HTMLElement): void => {\n      this.inputRefs[currency] = ref;\n    },\n    { primitive: true }\n  );\n\n  renderSlide = (currency: TCurrency) => {\n    const {\n      pockets,\n      type,\n      inputValue,\n      onAmountChange,\n      valueFieldName,\n      extraContent\n    } = this.props;\n\n    return (\n      <ExchangeBlock\n        key={currency}\n        data-currency={currency}\n        onClick={this.handleSlideClick}\n      >\n        <Row>\n          <div>{currency}</div>\n          <CurrencyInput\n            getRef={this.setInputRef(currency)}\n            prefix={type === FieldType.Source ? '-' : '+'}\n            name={valueFieldName}\n            value={inputValue}\n            onChange={onAmountChange}\n          />\n        </Row>\n        <Row>\n          <SecondaryText>\n            You have&nbsp;\n            {formatMoney(pockets[currency], currency, {\n              fractions: 'always'\n            })}\n          </SecondaryText>\n\n          <SecondaryText>{extraContent}</SecondaryText>\n        </Row>\n      </ExchangeBlock>\n    );\n  };\n\n  render() {\n    const { currency, type } = this.props;\n\n    return (\n      <Wrapper type={type}>\n        <Slider\n          currentSlide={DEFAULT_CURRENCY_ORDER.indexOf(currency)}\n          onSlide={this.handleSlide}\n        >\n          {DEFAULT_CURRENCY_ORDER.map(this.renderSlide)}\n        </Slider>\n      </Wrapper>\n    );\n  }\n}\nexport default WigdetBlock;\n","import styled from '@emotion/styled';\nimport colors from '../../constants/colors';\n\nexport const Content = styled.div`\n  border-radius: 6px;\n  overflow: hidden;\n  box-shadow: 0 24px 32px ${colors.shadow};\n`;\n\nexport const ErrorString = styled.div`\n  margin-top: 8px;\n  min-height: 14px;\n  font-size: 14px;\n  text-align: center;\n  color: ${colors.red1};\n`;\n","import styled from '@emotion/styled';\nimport colors from '../../../constants/colors';\n\nexport const Button = styled.button<{ success: boolean }>`\n  margin: 20px auto 0;\n  display: block;\n  border-radius: 40px;\n  height: 46px;\n  width: 160px;\n  font-size: 18px;\n  border: none;\n  text-align: center;\n  background-color: ${colors.pink1};\n  color: white;\n  transition: all 0.25s ease;\n  cursor: pointer;\n  outline: none;\n  position: relative;\n\n  :disabled {\n    opacity: ${({ success }) => (success ? 1 : 0.25)};\n    pointer-events: none;\n  }\n\n  :hover {\n    background-color: ${colors.pink2};\n  }\n\n  :active {\n    background-color: ${colors.pink3};\n  }\n`;\n\nexport const CheckIcon = styled.svg<{ success: boolean }>`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: currentColor;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transition: all 0.225s ease-in-out;\n  transform: translate(-50%, -50%) scale(${({ success }) => (success ? 1 : 0)});\n  transition-delay: ${({ success }) => (success ? '0.1s' : 0)};\n  opacity: ${({ success }) => (success ? 1 : 0)};\n`;\n\nexport const Text = styled.span<{ success: boolean }>`\n  transition: opacity ${({ success }) => (success ? '.15s' : '0.3s')}\n    ease-in-out;\n  transition-delay: ${({ success }) => (success ? 0 : '0.28s')};\n  opacity: ${({ success }) => (success ? 0 : 1)};\n`;\n","import React, { PureComponent } from 'react';\nimport { Button, CheckIcon, Text } from './SubmitButton.style';\nimport noop from '../../../utils/noop';\n\ninterface IExchangeButtonProps {\n  disabled?: boolean;\n  onClick: (e: React.SyntheticEvent) => void;\n}\n\ninterface IExchangeButtonState {\n  success: boolean;\n}\n\nclass ExchnageButton extends PureComponent<\n  IExchangeButtonProps,\n  IExchangeButtonState\n> {\n  static defaultProps = {\n    onClick: noop\n  };\n\n  state = {\n    success: false\n  };\n\n  private timer?: number;\n\n  handleClick = (e: React.SyntheticEvent) => {\n    clearTimeout(this.timer);\n\n    this.setState({\n      success: true\n    });\n\n    this.timer = window.setTimeout(() => {\n      this.setState({\n        success: false\n      });\n    }, 800);\n\n    this.props.onClick(e);\n  };\n\n  render() {\n    const { disabled, children } = this.props;\n    const { success } = this.state;\n\n    return (\n      <Button success={success} disabled={disabled} onClick={this.handleClick}>\n        <Text success={success}>{children}</Text>\n        <CheckIcon success={success} viewBox=\"0 0 24 24\">\n          <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n        </CheckIcon>\n      </Button>\n    );\n  }\n}\n\nexport default ExchnageButton;\n","import { TAnyObject } from '../types';\n\nfunction path(obj: TAnyObject | undefined, paths: Array<string | number>): any {\n  let val = obj;\n  let idx = 0;\n\n  if (!obj) {\n    return;\n  }\n\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n\n    val = val[paths[idx]];\n    idx += 1;\n  }\n\n  return val;\n}\n\nexport default path;\n","import React from 'react';\nimport ExchangeBlock from './WidgetBlock/WidgetBlock';\nimport { TCurrency, IFieldCallback, FieldType } from '../../types';\nimport { Content, ErrorString } from './ExchangeWidget.style';\nimport formatMoney from '../../utils/formatMoney';\nimport ExchnageButton from './SubmitButton/SubmitButton';\nimport { TPockets } from '../../store/reducers/pockets';\nimport path from '../../utils/path';\nimport { TRates } from '../../store/reducers/rates';\n\ninterface IWidgetProps {\n  pockets: TPockets;\n  rates?: TRates;\n  sourceCurrency: TCurrency;\n  targetCurrency: TCurrency;\n  sourceAmount?: number | null;\n  targetAmount?: number | null;\n  valid: boolean;\n  errorMsg?: string;\n\n  onCurrencyChange: (type: FieldType, value: TCurrency) => void;\n  onAmountChange?: IFieldCallback;\n  onSubmit: () => void;\n}\n\nclass ExchangeWidget extends React.PureComponent<IWidgetProps> {\n  render() {\n    const {\n      pockets,\n      sourceCurrency,\n      targetCurrency,\n      sourceAmount,\n      targetAmount,\n      rates,\n      onCurrencyChange,\n      onAmountChange,\n      onSubmit,\n      valid,\n      errorMsg\n    } = this.props;\n\n    const rate = path(rates, [sourceCurrency, targetCurrency]);\n\n    return (\n      <div>\n        <Content>\n          <ExchangeBlock\n            valueFieldName={'sourceAmount'}\n            type={FieldType.Source}\n            pockets={pockets}\n            currency={sourceCurrency}\n            inputValue={sourceAmount}\n            onCurrencyChange={onCurrencyChange}\n            onAmountChange={onAmountChange}\n          />\n          <ExchangeBlock\n            valueFieldName={'targetAmount'}\n            type={FieldType.Target}\n            pockets={pockets}\n            currency={targetCurrency}\n            inputValue={targetAmount}\n            onCurrencyChange={onCurrencyChange}\n            onAmountChange={onAmountChange}\n            extraContent={\n              !!rate &&\n              `${formatMoney(1, targetCurrency)} = ${formatMoney(\n                1 / rate,\n                sourceCurrency\n              )}`\n            }\n          />\n        </Content>\n\n        <ExchnageButton disabled={!valid} onClick={onSubmit}>\n          Exchange\n        </ExchnageButton>\n        <ErrorString>{errorMsg}</ErrorString>\n      </div>\n    );\n  }\n}\n\nexport default ExchangeWidget;\n","import React, { Component } from 'react';\nimport { FieldType, IFieldCallback, TCurrency } from '../../../types';\nimport memoize from 'memoizee';\nimport { TPockets } from '../../../store/reducers/pockets';\nimport { TRates } from '../../../store/reducers/rates';\nimport path from '../../../utils/path';\nimport { getNextCurrency } from './utils';\n\nconst UPDATE_INTERVAL = 10000;\n\ntype AmountFieldName = 'sourceAmount' | 'targetAmount';\n\nconst getOppositeFieldName = (name: AmountFieldName): AmountFieldName =>\n  name === 'targetAmount' ? 'sourceAmount' : 'targetAmount';\n\nexport interface IFormStateHOCProps {\n  pockets: TPockets;\n  rates: TRates;\n  onExchange: (\n    sourceCurrency: TCurrency,\n    sourceAmount: number,\n    targetCurrency: TCurrency,\n    targetAmount: number\n  ) => void;\n  updateRates: (baseCurrency: TCurrency) => void;\n}\n\nexport interface IFormState {\n  sourceAmount?: number | null;\n  targetAmount?: number | null;\n  sourceCurrency: TCurrency;\n  targetCurrency: TCurrency;\n  lastUpdatedField?: AmountFieldName;\n}\n\nconst defaultState: IFormState = {\n  sourceCurrency: 'RUB',\n  targetCurrency: 'EUR'\n};\n\nconst formStateHOC = (initialState: IFormState = defaultState) => (\n  WrappedComponent: React.ComponentType<any>\n) => {\n  class FormStateHOC extends Component<IFormStateHOCProps, IFormState> {\n    static displayName = `FormStateHOC(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    state: IFormState = initialState;\n\n    private updateTimer?: number;\n\n    componentDidMount() {\n      this.props.updateRates(this.state.sourceCurrency);\n      this.updateTimer = window.setInterval(\n        () => this.props.updateRates(this.state.sourceCurrency),\n        UPDATE_INTERVAL\n      );\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.updateTimer);\n    }\n\n    componentDidUpdate(prevProps: IFormStateHOCProps) {\n      const { lastUpdatedField } = this.state;\n\n      if (this.props.rates !== prevProps.rates && lastUpdatedField) {\n        this.calcAmount(getOppositeFieldName(lastUpdatedField));\n      }\n    }\n\n    handleCurrencyChange = (type: FieldType, currency: TCurrency) => {\n      const name =\n        type === FieldType.Source ? 'sourceCurrency' : 'targetCurrency';\n      const oppositeName =\n        type === FieldType.Source ? 'targetCurrency' : 'sourceCurrency';\n\n      const prevCurrency = this.state[name];\n\n      this.setState<never>({\n        [name]: currency\n      });\n\n      this.props.updateRates(currency);\n\n      const oppositeCurrency = this.state[oppositeName];\n\n      // if currencies are same we need to change one of them\n      if (oppositeCurrency === currency) {\n        this.setState<never>({\n          [oppositeName]: getNextCurrency(oppositeCurrency, prevCurrency)\n        });\n      }\n    };\n\n    handleAmountChange: IFieldCallback = (e, { value, name }) => {\n      if (!name) {\n        return;\n      }\n\n      this.setState<never>(\n        {\n          [name]: value.length ? +value : undefined,\n          lastUpdatedField: name as AmountFieldName\n        },\n        () => {\n          this.calcAmount(getOppositeFieldName(name as AmountFieldName));\n        }\n      );\n    };\n\n    calcAmount(fieldName: AmountFieldName) {\n      const { rates } = this.props;\n      const { sourceCurrency, targetCurrency } = this.state;\n      const oppositeVal = this.state[getOppositeFieldName(fieldName)];\n\n      const rate = path(rates, [sourceCurrency, targetCurrency]);\n      let val;\n\n      if (!rate || !oppositeVal) {\n        val = null;\n      } else {\n        let realRate = fieldName === 'sourceAmount' ? 1 / rate : rate;\n\n        val = Math.round(oppositeVal * realRate * 100) / 100;\n      }\n\n      this.setState<never>({\n        [fieldName]: val\n      });\n    }\n\n    handleSubmit = () => {\n      const {\n        sourceCurrency,\n        targetCurrency,\n        sourceAmount,\n        targetAmount\n      } = this.state;\n\n      this.props.onExchange(\n        sourceCurrency,\n        sourceAmount || 0,\n        targetCurrency,\n        targetAmount || 0\n      );\n\n      this.setState({\n        sourceAmount: null,\n        targetAmount: null\n      });\n    };\n\n    validate = memoize(\n      (\n        sourceCurrency: TCurrency,\n        pockets: TPockets,\n        sourceAmount?: number | null,\n        targetAmount?: number | null\n      ): { valid: boolean; errorMsg?: string } => {\n        if (!sourceAmount || !targetAmount) {\n          return { valid: false };\n        }\n        if (sourceAmount > pockets[sourceCurrency]) {\n          return {\n            valid: false,\n            errorMsg: 'Not enough money'\n          };\n        }\n\n        return { valid: true };\n      },\n      { max: 1 }\n    );\n\n    render() {\n      const { pockets } = this.props;\n      const { sourceCurrency, sourceAmount, targetAmount } = this.state;\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          {...this.validate(\n            sourceCurrency,\n            pockets,\n            sourceAmount,\n            targetAmount\n          )}\n          sourceAmount={this.state.sourceAmount}\n          targetAmount={this.state.targetAmount}\n          sourceCurrency={this.state.sourceCurrency}\n          targetCurrency={this.state.targetCurrency}\n          onAmountChange={this.handleAmountChange}\n          onCurrencyChange={this.handleCurrencyChange}\n          onSubmit={this.handleSubmit}\n        />\n      );\n    }\n  }\n\n  return FormStateHOC;\n};\n\nexport default formStateHOC;\n","import { TCurrency } from '../../../types';\nimport { DEFAULT_CURRENCY_ORDER as currencyOrder } from '../../../constants/common';\n\nexport function getNextCurrency(\n  currency: TCurrency,\n  prevCurrency: TCurrency\n): TCurrency {\n  const curIndex = currencyOrder.indexOf(currency);\n  const prevIndex = currencyOrder.indexOf(prevCurrency);\n  const shift = curIndex > prevIndex ? -1 : 1;\n\n  return currencyOrder[\n    (currencyOrder.length + curIndex + shift) % currencyOrder.length\n  ];\n}\n","import { connect } from 'react-redux';\n\nimport { IStoreState } from '../../store';\nimport updateRates from '../../actions/updateRates';\nimport { TCurrency, TDispatch } from '../../types';\nimport exchange from '../../actions/exchange';\nimport ExchangeWidget from './ExchangeWidget';\nimport formStateHOC from './formStateHOC/formStateHOC';\n\nconst mapStateToProps = ({ pockets, rates }: IStoreState) => ({\n  pockets,\n  rates\n});\n\nconst mapDispatchToProps = (dispatch: TDispatch) => ({\n  onExchange: (\n    sourceCurrency: TCurrency,\n    sourceAmount: number,\n    targetCurrency: TCurrency,\n    targetAmount: number\n  ) => {\n    dispatch(\n      exchange(sourceCurrency, sourceAmount, targetCurrency, targetAmount)\n    );\n  },\n  updateRates: (baseCurrency: TCurrency) => dispatch(updateRates(baseCurrency))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(formStateHOC()(ExchangeWidget));\n","import { IAction, TCurrency } from '../types';\nimport { ActionType } from './index';\n\nexport default function exchange(\n  sourceCurrency: TCurrency,\n  sourceAmount: number,\n  targetCurrency: TCurrency,\n  targetAmount: number\n): IAction {\n  return {\n    type: ActionType.POCKETS_EXCHANGE,\n    payload: {\n      sourceCurrency,\n      sourceAmount,\n      targetCurrency,\n      targetAmount\n    }\n  };\n}\n","import { ActionType } from '../../actions';\nimport { IAction, TCurrency } from '../../types';\n\nexport type TRates = {\n  [key in TCurrency]?: {\n    [key in TCurrency]: number;\n  };\n};\n\nexport const initState = {};\n\nfunction rates(state: TRates = initState, action: IAction): TRates {\n  switch (action.type) {\n    case ActionType.RATES_REQUEST_SUCCESS: {\n      const { rates, baseCurrency } = action.payload;\n\n      return {\n        ...state,\n        [baseCurrency]: rates\n      };\n    }\n\n    case ActionType.RATES_REQUEST_FAILURE: {\n      return {\n        ...state,\n        [action.payload.baseCurrency]: {}\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default rates;\n","import { IAction, TCurrency } from '../../types';\nimport { ActionType } from '../../actions';\n\nexport type TPockets = {\n  [key in TCurrency]: number;\n};\n\nexport const initState: TPockets = {\n  RUB: 1000500.34,\n  USD: 800.7,\n  EUR: 600,\n  GBP: 70.5\n};\n\nfunction pockets(state: TPockets = initState, action: IAction): TPockets {\n  switch (action.type) {\n    case ActionType.POCKETS_EXCHANGE: {\n      const {\n        sourceCurrency,\n        sourceAmount,\n        targetCurrency,\n        targetAmount\n      } = action.payload;\n\n      return {\n        ...state,\n        [sourceCurrency]: state[sourceCurrency as TCurrency] - sourceAmount,\n        [targetCurrency]: state[targetCurrency as TCurrency] + targetAmount\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default pockets;\n","import { IAction, IAlert, TAnyObject } from '../../types';\nimport { ActionType } from '../../actions';\n\nexport type TAlerts = {\n  [key in string]: IAlert;\n};\n\nexport const initState: TAlerts = {};\n\nconst filterAlert = (state: TAlerts, alert: IAlert): TAlerts =>\n  Object.keys(state).reduce((memo: TAnyObject, key: string) => {\n    if (state[key].id !== alert.id) {\n      memo[key] = state[key];\n    }\n\n    return memo;\n  }, {});\n\nfunction alerts(state: TAlerts = initState, action: IAction): TAlerts {\n  const keys = Object.keys(state);\n  let _inc: number = +keys[keys.length - 1] + 1 || 0;\n\n  switch (action.type) {\n    case ActionType.ALERT_ADD: {\n      const { repeatable } = action.payload;\n\n      const newState = repeatable\n        ? { ...state }\n        : filterAlert(state, action.payload as IAlert);\n\n      newState[_inc++] = action.payload as IAlert;\n\n      return newState;\n    }\n\n    case ActionType.ALERT_REMOVE: {\n      return filterAlert(state, action.payload as IAlert);\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default alerts;\n","import { combineReducers } from 'redux';\nimport rates from './rates';\nimport pockets from './pockets';\nimport alerts from './alerts';\nimport { IStoreState } from '../index';\nimport { IAction } from '../../types';\n\nconst rootReducer = combineReducers<IStoreState, IAction>({\n  rates,\n  pockets,\n  alerts\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { TPockets } from './reducers/pockets';\nimport { TRates } from './reducers/rates';\nimport { TAlerts } from './reducers/alerts';\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport interface IStoreState {\n  pockets: TPockets;\n  rates: TRates;\n  alerts: TAlerts;\n}\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport colors from '../../constants/colors';\nimport { IAlert } from '../../types';\n\nconst Container = styled.div`\n  margin-bottom: 8px;\n  font-size: 13px;\n  height: 45px;\n  color: ${colors.red1};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst ErrorMsg = styled.div`\n  margin-top: 2px;\n`;\n\ninterface IErorrNotificatonsProps {\n  alerts?: Array<{ message: string }>;\n}\n\nconst AlertsStack: React.FC<IErorrNotificatonsProps> = ({ alerts }) => (\n  <Container>\n    {!!alerts &&\n      alerts\n        .slice(-3)\n        .map(({ message }, index) => (\n          <ErrorMsg key={index}>⚠️ {message}</ErrorMsg>\n        ))}\n  </Container>\n);\n\nexport default AlertsStack;\n","import { connect } from 'react-redux';\nimport { IStoreState } from '../../store';\nimport AlertsStack from './AlertsStack';\n\nconst mapStateToProps = ({ alerts }: IStoreState) => ({\n  alerts: alerts ? Object.values(alerts) : undefined\n});\n\nexport default connect(mapStateToProps)(AlertsStack);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport ExchangeWidget from '../ExchangeWidget/ExchangeWidgetContainer';\nimport { Provider } from 'react-redux';\nimport store from '../../store';\nimport AlertsStack from '../AlertsStack/AlertsStackContainer';\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px;\n`;\n\nconst Content = styled.div`\n  max-width: 440px;\n  width: 100%;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Container>\n        <Content>\n          <AlertsStack />\n          <ExchangeWidget />\n        </Content>\n      </Container>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nimport 'reset-css';\nimport './global.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}